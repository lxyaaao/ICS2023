                            | #######################################################################
                            | # Test for copying block of size 63;
                            | #######################################################################
0x000:                      | 	.pos 0
0x000: 30f4f808000000000000 | main:	irmovq Stack, %rsp  	# Set up stack pointer
                            | 
                            | 	# Set up arguments for copy function and then invoke it
0x00a: 30f23f00000000000000 | 	irmovq $63, %rdx		# src and dst have 63 elements
0x014: 30f67806000000000000 | 	irmovq dest, %rsi	# dst array
0x01e: 30f76804000000000000 | 	irmovq src, %rdi	# src array
0x028: 803200000000000000   | 	call ncopy		 
0x031: 00                   | 	halt			# should halt with num nonzeros in %rax
0x032:                      | StartFun:
                            | #/* $begin ncopy-ys */
                            | ##################################################################
                            | # ncopy.ys - Copy a src block of len words to dst.
                            | # Return the number of positive words (>0) contained in src.
                            | #
                            | # Include your name and ID here.
                            | # 刘昕垚 2200012866
                            | # Describe how and why you modified the baseline code.
                            | # 1. 将addq和subq替换为iaddq，CPE：15.18->13左右（ssh断了没保存忘记了qwq）
                            | # 2. 先进行6*1循环展开，并减少bubble，CPE：->9.08
                            | # 3. 
                            | ##################################################################
                            | # Do not modify this portion
                            | # Function prologue.
                            | # %rdi = src, %rsi = dst, %rdx = len
0x032:                      | ncopy:
                            | 
                            | ##################################################################
                            | # You can modify this portion
                            | # Loop header
0x032: c0f2f6ffffffffffffff | 	iaddq $-10, %rdx
0x03c: 720602000000000000   | 	jl fdone		# if so, goto next:
                            | 
0x045:                      | L0:	
0x045: 50a70000000000000000 | 	mrmovq (%rdi), %r10	# read val from src
0x04f: 50b70800000000000000 | 	mrmovq 8(%rdi), %r11 #read next val from src
0x059: 40a60000000000000000 | 	rmmovq %r10, (%rsi)	# and store val to dst
0x063: 62aa                 | 	andq %r10, %r10		# val <= 0?
0x065: 717800000000000000   | 	jle L1		# if so, goto L1:
0x06e: c0f00100000000000000 | 	iaddq $1, %rax		# count++
                            | 
0x078:                      | L1:
0x078: 40b60800000000000000 | 	rmmovq %r11, 8(%rsi)
0x082: 50a71000000000000000 | 	mrmovq 16(%rdi), %r10
0x08c: 62bb                 | 	andq %r11, %r11	
0x08e: 71a100000000000000   | 	jle L2	
0x097: c0f00100000000000000 | 	iaddq $1, %rax
                            | 
0x0a1:                      | L2:
0x0a1: 40a61000000000000000 | 	rmmovq %r10, 16(%rsi)
0x0ab: 50b71800000000000000 | 	mrmovq 24(%rdi), %r11
0x0b5: 62aa                 | 	andq %r10, %r10	
0x0b7: 71ca00000000000000   | 	jle L3	
0x0c0: c0f00100000000000000 | 	iaddq $1, %rax
                            | 
0x0ca:                      | L3:
0x0ca: 40b61800000000000000 | 	rmmovq %r11, 24(%rsi)
0x0d4: 50a72000000000000000 | 	mrmovq 32(%rdi), %r10
0x0de: 62bb                 | 	andq %r11, %r11	
0x0e0: 71f300000000000000   | 	jle L4	
0x0e9: c0f00100000000000000 | 	iaddq $1, %rax
                            | 
0x0f3:                      | L4:
0x0f3: 40a62000000000000000 | 	rmmovq %r10, 32(%rsi)
0x0fd: 50b72800000000000000 | 	mrmovq 40(%rdi), %r11
0x107: 62aa                 | 	andq %r10, %r10	
0x109: 711c01000000000000   | 	jle L5	
0x112: c0f00100000000000000 | 	iaddq $1, %rax
                            | 
0x11c:                      | L5:
0x11c: 40b62800000000000000 | 	rmmovq %r11, 40(%rsi)
0x126: 50a73000000000000000 | 	mrmovq 48(%rdi), %r10
0x130: 62bb                 | 	andq %r11, %r11	
0x132: 714501000000000000   | 	jle L6	
0x13b: c0f00100000000000000 | 	iaddq $1, %rax
                            | 
0x145:                      | L6:
0x145: 40a63000000000000000 | 	rmmovq %r10, 48(%rsi)
0x14f: 50b73800000000000000 | 	mrmovq 56(%rdi), %r11
0x159: 62aa                 | 	andq %r10, %r10	
0x15b: 716e01000000000000   | 	jle L7	
0x164: c0f00100000000000000 | 	iaddq $1, %rax
                            | 
0x16e:                      | L7:
0x16e: 40b63800000000000000 | 	rmmovq %r11, 56(%rsi)
0x178: 50a74000000000000000 | 	mrmovq 64(%rdi), %r10
0x182: 62bb                 | 	andq %r11, %r11	
0x184: 719701000000000000   | 	jle L8	
0x18d: c0f00100000000000000 | 	iaddq $1, %rax
                            | 
0x197:                      | L8:
0x197: 40a64000000000000000 | 	rmmovq %r10, 64(%rsi)
0x1a1: 50b74800000000000000 | 	mrmovq 72(%rdi), %r11
0x1ab: 62aa                 | 	andq %r10, %r10	
0x1ad: 71c001000000000000   | 	jle L9	
0x1b6: c0f00100000000000000 | 	iaddq $1, %rax
                            | 
0x1c0:                      | L9:
0x1c0: 40b64800000000000000 | 	rmmovq %r11, 72(%rsi)
0x1ca: 62bb                 | 	andq %r11, %r11	
0x1cc: 71df01000000000000   | 	jle test	
0x1d5: c0f00100000000000000 | 	iaddq $1, %rax
                            | 
0x1df:                      | test:
0x1df: c0f75000000000000000 | 	iaddq $80, %rdi
0x1e9: c0f65000000000000000 | 	iaddq $80, %rsi
0x1f3: c0f2f6ffffffffffffff | 	iaddq $-10, %rdx
0x1fd: 754500000000000000   | 	jge L0
                            | 
0x206:                      | fdone:
0x206: c0f20700000000000000 |     iaddq $7, %rdx # 判断与3的大小
0x210: 723502000000000000   |     jl BEYOND3
0x219: 767002000000000000   |     jg ABOVE3
0x222: 50871000000000000000 | 	mrmovq 16(%rdi), %r8
0x22c: 73f603000000000000   |     je NEXT3
                            | 
0x235:                      | BEYOND3:
0x235: c0f20200000000000000 |     iaddq $2, %rdx # 判断与1的大小
0x23f: 50870000000000000000 | 	mrmovq (%rdi), %r8
0x249: 734804000000000000   |     je NEXT1
0x252: c0f2ffffffffffffffff |     iaddq $-1, %rdx # 判断与2的大小
0x25c: 50970800000000000000 | 	mrmovq 8(%rdi), %r9
0x266: 731f04000000000000   |     je NEXT2
0x26f: 90                   |     ret
0x270:                      | ABOVE3:
0x270: c0f2fdffffffffffffff |     iaddq $-3, %rdx # 判断与6的大小
0x27a: 76c602000000000000   |     jg ABOVE6
0x283: 50972800000000000000 | 	mrmovq 40(%rdi), %r9
0x28d: 737b03000000000000   |     je NEXT6
0x296: c0f20100000000000000 |     iaddq $1, %rdx # 判断与5的大小
0x2a0: 50971800000000000000 | 	mrmovq 24(%rdi), %r9
0x2aa: 72cd03000000000000   |     jl NEXT4
0x2b3: 50872000000000000000 | 	mrmovq 32(%rdi), %r8 
0x2bd: 73a403000000000000   |     je NEXT5
0x2c6:                      | ABOVE6:
0x2c6: c0f2feffffffffffffff |     iaddq $-2, %rdx # 判断与8的大小
0x2d0: 50873000000000000000 |     mrmovq 48(%rdi), %r8
0x2da: 725203000000000000   | 	jl NEXT7
0x2e3: 50973800000000000000 | 	mrmovq 56(%rdi), %r9
0x2ed: 732903000000000000   |     je NEXT8
                            | 
0x2f6: 50874000000000000000 | 	mrmovq 64(%rdi), %r8 # src[8]
0x300: 50973800000000000000 | 	mrmovq 56(%rdi), %r9
0x30a: 40864000000000000000 | 	rmmovq %r8, 64(%rsi)
0x314: 6288                 |     andq %r8, %r8
0x316: 712903000000000000   |     jle NEXT8
0x31f: c0f00100000000000000 |     iaddq $1, %rax
                            | 
0x329:                      | NEXT8:
0x329: 50873000000000000000 |     mrmovq 48(%rdi), %r8
0x333: 40963800000000000000 |     rmmovq %r9, 56(%rsi)
0x33d: 6299                 |     andq %r9, %r9
0x33f: 715203000000000000   | 	jle NEXT7
0x348: c0f00100000000000000 |     iaddq $1, %rax
                            | 
0x352:                      | NEXT7:
0x352: 50972800000000000000 |     mrmovq 40(%rdi), %r9
0x35c: 40863000000000000000 |     rmmovq %r8, 48(%rsi)
0x366: 6288                 |     andq %r8, %r8
0x368: 717b03000000000000   | 	jle NEXT6
0x371: c0f00100000000000000 |     iaddq $1, %rax
                            | 
0x37b:                      | NEXT6:
0x37b: 50872000000000000000 |     mrmovq 32(%rdi), %r8
0x385: 40962800000000000000 |     rmmovq %r9, 40(%rsi)
0x38f: 6299                 |     andq %r9, %r9
0x391: 71a403000000000000   | 	jle NEXT5
0x39a: c0f00100000000000000 |     iaddq $1, %rax
                            | 
0x3a4:                      | NEXT5:
0x3a4: 50971800000000000000 |     mrmovq 24(%rdi), %r9
0x3ae: 40862000000000000000 |     rmmovq %r8, 32(%rsi)
0x3b8: 6288                 |     andq %r8, %r8
0x3ba: 71cd03000000000000   | 	jle NEXT4
0x3c3: c0f00100000000000000 |     iaddq $1, %rax
                            | 
0x3cd:                      | NEXT4:
0x3cd: 50871000000000000000 |     mrmovq 16(%rdi), %r8
0x3d7: 40961800000000000000 |     rmmovq %r9, 24(%rsi)
0x3e1: 6299                 |     andq %r9, %r9
0x3e3: 71f603000000000000   | 	jle NEXT3
0x3ec: c0f00100000000000000 |     iaddq $1, %rax
                            | 
0x3f6:                      | NEXT3:
0x3f6: 50970800000000000000 |     mrmovq 8(%rdi), %r9
0x400: 40861000000000000000 |     rmmovq %r8, 16(%rsi)
0x40a: 6288                 |     andq %r8, %r8
0x40c: 711f04000000000000   | 	jle NEXT2
0x415: c0f00100000000000000 |     iaddq $1, %rax
                            | 
0x41f:                      | NEXT2:
0x41f: 50870000000000000000 |     mrmovq (%rdi), %r8
0x429: 40960800000000000000 |     rmmovq %r9, 8(%rsi)
0x433: 6299                 |     andq %r9, %r9
0x435: 714804000000000000   | 	jle NEXT1
0x43e: c0f00100000000000000 |     iaddq $1, %rax
                            | 
0x448:                      | NEXT1:
0x448: 40860000000000000000 |     rmmovq %r8, (%rsi)
0x452: 6288                 |     andq %r8, %r8
0x454: 716704000000000000   | 	jle Done
0x45d: c0f00100000000000000 |     iaddq $1, %rax
                            | 	
                            | ##################################################################
                            | # Do not modify the following section of code
                            | # Function epilogue.
0x467:                      | Done:
0x467: 90                   | 	ret
                            | ##################################################################
                            | # Keep the following label at the end of your function
0x468:                      | End:
                            | #/* $end ncopy-ys */
0x468:                      | EndFun:
                            | 
                            | ###############################
                            | # Source and destination blocks 
                            | ###############################
0x468:                      | 	.align 8
0x468:                      | src:
0x468: 0100000000000000     | 	.quad 1
0x470: 0200000000000000     | 	.quad 2
0x478: 0300000000000000     | 	.quad 3
0x480: 0400000000000000     | 	.quad 4
0x488: 0500000000000000     | 	.quad 5
0x490: faffffffffffffff     | 	.quad -6
0x498: f9ffffffffffffff     | 	.quad -7
0x4a0: f8ffffffffffffff     | 	.quad -8
0x4a8: f7ffffffffffffff     | 	.quad -9
0x4b0: f6ffffffffffffff     | 	.quad -10
0x4b8: 0b00000000000000     | 	.quad 11
0x4c0: 0c00000000000000     | 	.quad 12
0x4c8: f3ffffffffffffff     | 	.quad -13
0x4d0: 0e00000000000000     | 	.quad 14
0x4d8: f1ffffffffffffff     | 	.quad -15
0x4e0: 1000000000000000     | 	.quad 16
0x4e8: efffffffffffffff     | 	.quad -17
0x4f0: eeffffffffffffff     | 	.quad -18
0x4f8: 1300000000000000     | 	.quad 19
0x500: ecffffffffffffff     | 	.quad -20
0x508: 1500000000000000     | 	.quad 21
0x510: 1600000000000000     | 	.quad 22
0x518: 1700000000000000     | 	.quad 23
0x520: 1800000000000000     | 	.quad 24
0x528: 1900000000000000     | 	.quad 25
0x530: 1a00000000000000     | 	.quad 26
0x538: e5ffffffffffffff     | 	.quad -27
0x540: 1c00000000000000     | 	.quad 28
0x548: 1d00000000000000     | 	.quad 29
0x550: 1e00000000000000     | 	.quad 30
0x558: 1f00000000000000     | 	.quad 31
0x560: e0ffffffffffffff     | 	.quad -32
0x568: 2100000000000000     | 	.quad 33
0x570: deffffffffffffff     | 	.quad -34
0x578: ddffffffffffffff     | 	.quad -35
0x580: dcffffffffffffff     | 	.quad -36
0x588: dbffffffffffffff     | 	.quad -37
0x590: daffffffffffffff     | 	.quad -38
0x598: d9ffffffffffffff     | 	.quad -39
0x5a0: 2800000000000000     | 	.quad 40
0x5a8: 2900000000000000     | 	.quad 41
0x5b0: 2a00000000000000     | 	.quad 42
0x5b8: d5ffffffffffffff     | 	.quad -43
0x5c0: 2c00000000000000     | 	.quad 44
0x5c8: 2d00000000000000     | 	.quad 45
0x5d0: d2ffffffffffffff     | 	.quad -46
0x5d8: 2f00000000000000     | 	.quad 47
0x5e0: 3000000000000000     | 	.quad 48
0x5e8: 3100000000000000     | 	.quad 49
0x5f0: ceffffffffffffff     | 	.quad -50
0x5f8: cdffffffffffffff     | 	.quad -51
0x600: 3400000000000000     | 	.quad 52
0x608: cbffffffffffffff     | 	.quad -53
0x610: 3600000000000000     | 	.quad 54
0x618: c9ffffffffffffff     | 	.quad -55
0x620: c8ffffffffffffff     | 	.quad -56
0x628: c7ffffffffffffff     | 	.quad -57
0x630: c6ffffffffffffff     | 	.quad -58
0x638: c5ffffffffffffff     | 	.quad -59
0x640: c4ffffffffffffff     | 	.quad -60
0x648: c3ffffffffffffff     | 	.quad -61
0x650: c2ffffffffffffff     | 	.quad -62
0x658: c1ffffffffffffff     | 	.quad -63
0x660: fadebc0000000000     | 	.quad 0xbcdefa # This shouldn't get moved
                            | 
0x670:                      | 	.align 16
0x670:                      | Predest:
0x670: fadebc0000000000     | 	.quad 0xbcdefa
0x678:                      | dest:
0x678: abefcd0000000000     | 	.quad 0xcdefab
0x680: abefcd0000000000     | 	.quad 0xcdefab
0x688: abefcd0000000000     | 	.quad 0xcdefab
0x690: abefcd0000000000     | 	.quad 0xcdefab
0x698: abefcd0000000000     | 	.quad 0xcdefab
0x6a0: abefcd0000000000     | 	.quad 0xcdefab
0x6a8: abefcd0000000000     | 	.quad 0xcdefab
0x6b0: abefcd0000000000     | 	.quad 0xcdefab
0x6b8: abefcd0000000000     | 	.quad 0xcdefab
0x6c0: abefcd0000000000     | 	.quad 0xcdefab
0x6c8: abefcd0000000000     | 	.quad 0xcdefab
0x6d0: abefcd0000000000     | 	.quad 0xcdefab
0x6d8: abefcd0000000000     | 	.quad 0xcdefab
0x6e0: abefcd0000000000     | 	.quad 0xcdefab
0x6e8: abefcd0000000000     | 	.quad 0xcdefab
0x6f0: abefcd0000000000     | 	.quad 0xcdefab
0x6f8: abefcd0000000000     | 	.quad 0xcdefab
0x700: abefcd0000000000     | 	.quad 0xcdefab
0x708: abefcd0000000000     | 	.quad 0xcdefab
0x710: abefcd0000000000     | 	.quad 0xcdefab
0x718: abefcd0000000000     | 	.quad 0xcdefab
0x720: abefcd0000000000     | 	.quad 0xcdefab
0x728: abefcd0000000000     | 	.quad 0xcdefab
0x730: abefcd0000000000     | 	.quad 0xcdefab
0x738: abefcd0000000000     | 	.quad 0xcdefab
0x740: abefcd0000000000     | 	.quad 0xcdefab
0x748: abefcd0000000000     | 	.quad 0xcdefab
0x750: abefcd0000000000     | 	.quad 0xcdefab
0x758: abefcd0000000000     | 	.quad 0xcdefab
0x760: abefcd0000000000     | 	.quad 0xcdefab
0x768: abefcd0000000000     | 	.quad 0xcdefab
0x770: abefcd0000000000     | 	.quad 0xcdefab
0x778: abefcd0000000000     | 	.quad 0xcdefab
0x780: abefcd0000000000     | 	.quad 0xcdefab
0x788: abefcd0000000000     | 	.quad 0xcdefab
0x790: abefcd0000000000     | 	.quad 0xcdefab
0x798: abefcd0000000000     | 	.quad 0xcdefab
0x7a0: abefcd0000000000     | 	.quad 0xcdefab
0x7a8: abefcd0000000000     | 	.quad 0xcdefab
0x7b0: abefcd0000000000     | 	.quad 0xcdefab
0x7b8: abefcd0000000000     | 	.quad 0xcdefab
0x7c0: abefcd0000000000     | 	.quad 0xcdefab
0x7c8: abefcd0000000000     | 	.quad 0xcdefab
0x7d0: abefcd0000000000     | 	.quad 0xcdefab
0x7d8: abefcd0000000000     | 	.quad 0xcdefab
0x7e0: abefcd0000000000     | 	.quad 0xcdefab
0x7e8: abefcd0000000000     | 	.quad 0xcdefab
0x7f0: abefcd0000000000     | 	.quad 0xcdefab
0x7f8: abefcd0000000000     | 	.quad 0xcdefab
0x800: abefcd0000000000     | 	.quad 0xcdefab
0x808: abefcd0000000000     | 	.quad 0xcdefab
0x810: abefcd0000000000     | 	.quad 0xcdefab
0x818: abefcd0000000000     | 	.quad 0xcdefab
0x820: abefcd0000000000     | 	.quad 0xcdefab
0x828: abefcd0000000000     | 	.quad 0xcdefab
0x830: abefcd0000000000     | 	.quad 0xcdefab
0x838: abefcd0000000000     | 	.quad 0xcdefab
0x840: abefcd0000000000     | 	.quad 0xcdefab
0x848: abefcd0000000000     | 	.quad 0xcdefab
0x850: abefcd0000000000     | 	.quad 0xcdefab
0x858: abefcd0000000000     | 	.quad 0xcdefab
0x860: abefcd0000000000     | 	.quad 0xcdefab
0x868: abefcd0000000000     | 	.quad 0xcdefab
0x870:                      | Postdest:
0x870: bcfade0000000000     | 	.quad 0xdefabc
                            | 
0x878:                      | .align 8
                            | # Run time stack
0x878: 0000000000000000     | 	.quad 0
0x880: 0000000000000000     | 	.quad 0
0x888: 0000000000000000     | 	.quad 0
0x890: 0000000000000000     | 	.quad 0
0x898: 0000000000000000     | 	.quad 0
0x8a0: 0000000000000000     | 	.quad 0
0x8a8: 0000000000000000     | 	.quad 0
0x8b0: 0000000000000000     | 	.quad 0
0x8b8: 0000000000000000     | 	.quad 0
0x8c0: 0000000000000000     | 	.quad 0
0x8c8: 0000000000000000     | 	.quad 0
0x8d0: 0000000000000000     | 	.quad 0
0x8d8: 0000000000000000     | 	.quad 0
0x8e0: 0000000000000000     | 	.quad 0
0x8e8: 0000000000000000     | 	.quad 0
0x8f0: 0000000000000000     | 	.quad 0
                            | 
0x8f8:                      | Stack:
